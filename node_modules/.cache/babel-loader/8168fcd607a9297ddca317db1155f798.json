{"ast":null,"code":"import _slicedToArray from\"/Users/taniaromanjimenez/React/05-hook-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import{useEffect}from'react';import'./styles.css';import{todoReducer}from'./todoReducer';import{TodoList}from'./TodoList';import{TodoAdd}from'./TodoAdd';// const initialState = [{\n//     id: new Date().getTime(),\n//     desc: 'Aprender React',\n//     done: false\n// }]\nvar init=function init(){// si hay todos traelos\nreturn JSON.parse(localStorage.getItem('todos'))||[];// retorna todos si hay o sino un arreglo vacio\n// return localStorage.getItem('todos');\n// return [{\n//     id: new Date().getTime(),\n//     desc: 'Aprender React',\n//     done: false\n// }]\n};export var TodoApp=function TodoApp(){var _useReducer=useReducer(todoReducer,[],init),_useReducer2=_slicedToArray(_useReducer,2),todos=_useReducer2[0],dispatch=_useReducer2[1];// el InitialState es el init y [] es lo que va a ser inicialmente\nuseEffect(function(){localStorage.setItem('todos',JSON.stringify(todos));// solo guarda string el localstorage\n},[todos]);var handleDelete=function handleDelete(todoId){console.log(todoId);// crear la action\n// const newTodoDelete = { así funciona\n//     id: todoId,\n//     desc: description,\n//     done: false\n//    };\n//    const actionDelete = {\n//        type: 'delete',\n//        payload: newTodoDelete\n//    }\nvar action={type:'delete',payload:todoId};//dispatch\ndispatch(action);//     dispatch(actionDelete);\n};var handleToggle=function handleToggle(todoId){dispatch({type:'toggle',payload:todoId});};var handleAddTodo=function handleAddTodo(newTodo){dispatch({type:'add',payload:newTodo});};// console.log(description);\n// const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if( description.trim().length <= 1){\n//         return;\n//     }\n//    const newTodo = {\n//     id: new Date().getTime(),\n//     desc: description,\n//     done: false\n//    };\n//    reset();\n// }\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"TodoApp ( \",todos.length,\" )\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-7\"},/*#__PURE__*/React.createElement(TodoList,{todos:todos,handleDelete:handleDelete,handleToggle:handleToggle})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-5\"},/*#__PURE__*/React.createElement(TodoAdd,{handleAddTodo:handleAddTodo}))));};","map":{"version":3,"sources":["/Users/taniaromanjimenez/React/05-hook-app/src/components/08-useReducer/TodoApp.js"],"names":["React","useReducer","useEffect","todoReducer","TodoList","TodoAdd","init","JSON","parse","localStorage","getItem","TodoApp","todos","dispatch","setItem","stringify","handleDelete","todoId","console","log","action","type","payload","handleToggle","handleAddTodo","newTodo","length"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,MAAO,cAAP,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,OAAT,KAAwB,WAAxB,CAEA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,IAAI,CAAE,QAANA,CAAAA,IAAM,EAAK,CACb;AAEA,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,GAA6C,EAApD,CAAwD;AAExD;AACA;AACA;AACA;AACA;AACA;AACH,CAXD,CAaA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,iBAEAV,UAAU,CAACE,WAAD,CAAc,EAAd,CAAkBG,IAAlB,CAFV,4CAErBM,KAFqB,iBAEbC,QAFa,iBAEmC;AAMhEX,SAAS,CAAE,UAAK,CACZO,YAAY,CAACK,OAAb,CAAqB,OAArB,CAA8BP,IAAI,CAACQ,SAAL,CAAgBH,KAAhB,CAA9B,EAAwD;AAC3D,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAKA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAW,CAC5BC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMG,CAAAA,MAAM,CAAG,CACRC,IAAI,CAAE,QADE,CAEPC,OAAO,CAAEL,MAFF,CAAf,CAMA;AACAJ,QAAQ,CAACO,MAAD,CAAR,CACJ;AACE,CAvBF,CA0BC,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAEN,MAAF,CAAa,CAC9BJ,QAAQ,CAAC,CACLQ,IAAI,CAAE,QADD,CAELC,OAAO,CAAEL,MAFJ,CAAD,CAAR,CAKH,CAND,CAQD,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAEC,OAAF,CAAc,CAEhCZ,QAAQ,CAAC,CACLQ,IAAI,CAAE,KADD,CAELC,OAAO,CAAEG,OAFJ,CAAD,CAAR,CAIH,CAND,CAQA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEI,mBACI,4CACI,2CAAgBb,KAAK,CAACc,MAAtB,MADJ,cAEI,8BAFJ,cAGI,2BAAK,SAAS,CAAC,KAAf,eACI,2BAAK,SAAS,CAAC,OAAf,eAGI,oBAAC,QAAD,EACA,KAAK,CAAGd,KADR,CAEA,YAAY,CAAGI,YAFf,CAGA,YAAY,CAAGO,YAHf,EAHJ,CADJ,cA+BI,2BAAK,SAAS,CAAC,OAAf,eACI,oBAAC,OAAD,EACI,aAAa,CAAGC,aADpB,EADJ,CA/BJ,CAHJ,CADJ,CAgEH,CAzIM","sourcesContent":["import React, { useReducer } from 'react';\nimport { useEffect } from 'react';\n\nimport './styles.css';\nimport { todoReducer } from './todoReducer';\nimport { TodoList } from './TodoList';\nimport { TodoAdd } from './TodoAdd';\n\n// const initialState = [{\n//     id: new Date().getTime(),\n//     desc: 'Aprender React',\n//     done: false\n// }]\n\nconst init= () =>{\n    // si hay todos traelos\n\n    return JSON.parse(localStorage.getItem('todos')) || []; // retorna todos si hay o sino un arreglo vacio\n\n    // return localStorage.getItem('todos');\n    // return [{\n    //     id: new Date().getTime(),\n    //     desc: 'Aprender React',\n    //     done: false\n    // }]\n}\n\nexport const TodoApp = () => {\n\nconst [ todos , dispatch ] = useReducer(todoReducer, [], init); // el InitialState es el init y [] es lo que va a ser inicialmente\n\n\n\n\n\nuseEffect( () =>{ \n    localStorage.setItem('todos', JSON.stringify( todos )); // solo guarda string el localstorage\n}, [todos] )\n\n\nconst handleDelete = (todoId) =>{\n    console.log(todoId);\n    // crear la action\n\n    // const newTodoDelete = { así funciona\n    //     id: todoId,\n    //     desc: description,\n    //     done: false\n    //    };\n    //    const actionDelete = {\n    //        type: 'delete',\n    //        payload: newTodoDelete\n    //    }\n\n    const action = {\n           type: 'delete',\n            payload: todoId\n    }\n    \n\n    //dispatch\n    dispatch(action);\n//     dispatch(actionDelete);\n }\n\n\n const handleToggle = ( todoId ) =>{\n     dispatch({\n         type: 'toggle',\n         payload: todoId\n     })\n\n }\n\nconst handleAddTodo = ( newTodo ) =>{\n\n    dispatch({\n        type: 'add',\n        payload: newTodo\n    });\n}\n\n// console.log(description);\n\n// const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if( description.trim().length <= 1){\n//         return;\n//     }\n//    const newTodo = {\n//     id: new Date().getTime(),\n//     desc: description,\n//     done: false\n//    };\n  \n//    reset();\n\n// }\n\n    return (\n        <div>\n            <h1>TodoApp ( { todos.length } )</h1>\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-7\">\n              \n        {/* TodoList,  necesita los todos argumento enviado mediante prop, handleDelete, handleToggle */}\n                    <TodoList \n                    todos={ todos}\n                    handleDelete={ handleDelete} \n                    handleToggle={ handleToggle}\n                    />\n                        {/* <ul className=\"list-group list-group-flush\">\n                            {\n                                todos.map( (todo, i ) => (\n                                    // TodoListItem, todo, index, handleDelate, handleToggle\n                                <li\n                                    key = { todo.id }\n                                    className=\"list-group-item\"\n                                >\n                                    <p className={ `${ todo.done && 'complete' }`}\n                                    onClick={ () => handleToggle(todo.id)}\n                                    >{ i + 1 }. { todo.desc }</p>\n                                    <button\n                                    className=\"btn btn-danger\"\n                                    onClick={ () => handleDelete(todo.id) }\n                                    >\n                                        Borrar\n                                    </button>\n                                    </li>\n                                ))\n                            }\n                            </ul>  */}\n                </div>\n                <div className=\"col-5\">\n                    <TodoAdd \n                        handleAddTodo={ handleAddTodo }\n                    />\n                    {/* <h4>Agregar Todo</h4>\n                    <hr />\n                    <form onSubmit={ handleSubmit }>\n                    <input \n                        type=\"text\"\n                        name=\"description\"\n                        className=\"form-control\"\n                        placeholder=\"Aprender ...\"\n                        autoComplete=\"off\"\n                        value={ description }\n                        onChange={ handleInputChange }\n                    />\n                    \n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-outline-primary mt-1 btn-block\"\n                    >\n                        Agregar\n                    </button>\n                    </form> */}\n                </div>\n            </div>\n     \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}