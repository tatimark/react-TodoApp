{"ast":null,"code":"export const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'add':\n      return [...state, action.payload];\n\n    case 'delete':\n      return state.filter(todo => todo.id !== action.payload);\n    //payload 123535 action.payload.id regresa un nuevo arreglo\n\n    case 'toggle':\n      return state.map(todo => todo.id === action.payload ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case 'toggle-old':\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return { ...todo,\n            done: !todo.done\n          };\n        } else {\n          return todo; // hay que regresar algo para que no haya undefind\n        }\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/taniaromanjimenez/React/05-hook-app/src/components/08-useReducer/todoReducer.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAE3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AAEI,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AAEJ,SAAK,QAAL;AACI,aAAOH,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAxC,CAAP;AAAyD;;AAG7D,SAAK,QAAL;AACQ,aAAOH,KAAK,CAACO,GAAN,CAAWF,IAAI,IACjBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAApB,GACC,EAAC,GAAGE,IAAJ;AAAUG,QAAAA,IAAI,EAAE,CAACH,IAAI,CAACG;AAAtB,OADD,GAEEH,IAHC,CAAP;;AAMR,SAAK,YAAL;AACI,aAAOL,KAAK,CAACO,GAAN,CAAUF,IAAI,IAAI;AACrB,YAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAvB,EAAgC;AAC5B,iBAAO,EACH,GAAGE,IADA;AAEHG,YAAAA,IAAI,EAAE,CAACH,IAAI,CAACG;AAFT,WAAP;AAIH,SALD,MAKO;AACH,iBAAOH,IAAP,CADG,CACU;AAChB;AAEJ,OAVM,CAAP;;AAYJ;AACI,aAAOL,KAAP;AA9BR;AAgCH,CAlCE","sourcesContent":["export const todoReducer = (state = [], action) => {\n\n        switch (action.type) {\n            case 'add':\n\n                return [...state, action.payload];\n\n            case 'delete':\n                return state.filter(todo => todo.id !== action.payload); //payload 123535 action.payload.id regresa un nuevo arreglo\n\n\n            case 'toggle':\n                    return state.map( todo =>\n                        (todo.id === action.payload)\n                        ?{...todo, done: !todo.done }\n                        : todo\n                    )\n\n            case 'toggle-old':\n                return state.map(todo => {\n                    if (todo.id === action.payload) {\n                        return {\n                            ...todo,\n                            done: !todo.done\n                        }\n                    } else {\n                        return todo; // hay que regresar algo para que no haya undefind\n                    }\n\n                })\n\n            default:\n                return state;\n        }\n    }"]},"metadata":{},"sourceType":"module"}