{"ast":null,"code":"var _jsxFileName = \"/Users/taniaromanjimenez/React/05-hook-app/src/components/08-useReducer/TodoApp.js\";\nimport React, { useReducer } from 'react';\nimport { useEffect } from 'react';\nimport './styles.css';\nimport { todoReducer } from './todoReducer';\nimport { TodoList } from './TodoList';\nimport { TodoAdd } from './TodoAdd'; // const initialState = [{\n//     id: new Date().getTime(),\n//     desc: 'Aprender React',\n//     done: false\n// }]\n\nconst init = () => {\n  // si hay todos traelos\n  return JSON.parse(localStorage.getItem('todos')) || []; // retorna todos si hay o sino un arreglo vacio\n  // return localStorage.getItem('todos');\n  // return [{\n  //     id: new Date().getTime(),\n  //     desc: 'Aprender React',\n  //     done: false\n  // }]\n};\n\nexport const TodoApp = () => {\n  const [todos, dispatch] = useReducer(todoReducer, [], init); // el InitialState es el init y [] es lo que va a ser inicialmente\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos)); // solo guarda string el localstorage\n  }, [todos]);\n\n  const handleDelete = todoId => {\n    console.log(todoId); // crear la action\n    // const newTodoDelete = { así funciona\n    //     id: todoId,\n    //     desc: description,\n    //     done: false\n    //    };\n    //    const actionDelete = {\n    //        type: 'delete',\n    //        payload: newTodoDelete\n    //    }\n\n    const action = {\n      type: 'delete',\n      payload: todoId\n    }; //dispatch\n\n    dispatch(action); //     dispatch(actionDelete);\n  };\n\n  const handleToggle = todoId => {\n    dispatch({\n      type: 'toggle',\n      payload: todoId\n    });\n  };\n\n  const handleAddTodo = newTodo => {\n    dispatch({\n      type: 'add',\n      payload: newTodo\n    });\n  }; // console.log(description);\n  // const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     if( description.trim().length <= 1){\n  //         return;\n  //     }\n  //    const newTodo = {\n  //     id: new Date().getTime(),\n  //     desc: description,\n  //     done: false\n  //    };\n  //    reset();\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"TodoApp ( \", todos.length, \" )\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    handleDelete: handleDelete,\n    handleToggle: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TodoApp, {\n    handleAddTodo: handleAddTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/taniaromanjimenez/React/05-hook-app/src/components/08-useReducer/TodoApp.js"],"names":["React","useReducer","useEffect","todoReducer","TodoList","TodoAdd","init","JSON","parse","localStorage","getItem","TodoApp","todos","dispatch","setItem","stringify","handleDelete","todoId","console","log","action","type","payload","handleToggle","handleAddTodo","newTodo","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAE,MAAK;AACb;AAEA,SAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAApD,CAHa,CAG2C;AAExD;AACA;AACA;AACA;AACA;AACA;AACH,CAXD;;AAaA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAE7B,QAAM,CAAEC,KAAF,EAAUC,QAAV,IAAuBZ,UAAU,CAACE,WAAD,EAAc,EAAd,EAAkBG,IAAlB,CAAvC,CAF6B,CAEmC;;AAMhEJ,EAAAA,SAAS,CAAE,MAAK;AACZO,IAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACQ,SAAL,CAAgBH,KAAhB,CAA9B,EADY,CAC4C;AAC3D,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAKA,QAAMI,YAAY,GAAIC,MAAD,IAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAD4B,CAE5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMG,MAAM,GAAG;AACRC,MAAAA,IAAI,EAAE,QADE;AAEPC,MAAAA,OAAO,EAAEL;AAFF,KAAf,CAd4B,CAoB5B;;AACAJ,IAAAA,QAAQ,CAACO,MAAD,CAAR,CArB4B,CAsBhC;AACE,GAvBF;;AA0BC,QAAMG,YAAY,GAAKN,MAAF,IAAa;AAC9BJ,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,OAAO,EAAEL;AAFJ,KAAD,CAAR;AAKH,GAND;;AAQD,QAAMO,aAAa,GAAKC,OAAF,IAAc;AAEhCZ,IAAAA,QAAQ,CAAK;AACTQ,MAAAA,IAAI,EAAE,KADG;AAETC,MAAAA,OAAO,EAAEG;AAFA,KAAL,CAAR;AAIH,GAND,CA/C6B,CAuD7B;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBb,KAAK,CAACc,MAAtB,OADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,QAAD;AACA,IAAA,KAAK,EAAGd,KADR;AAEA,IAAA,YAAY,EAAGI,YAFf;AAGA,IAAA,YAAY,EAAGO,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,eA+BI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AACI,IAAA,aAAa,EAAGC,aADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA/BJ,CAHJ,CADJ;AAgEH,CAzIM","sourcesContent":["import React, { useReducer } from 'react';\nimport { useEffect } from 'react';\n\nimport './styles.css';\nimport { todoReducer } from './todoReducer';\nimport { TodoList } from './TodoList';\nimport { TodoAdd } from './TodoAdd';\n\n// const initialState = [{\n//     id: new Date().getTime(),\n//     desc: 'Aprender React',\n//     done: false\n// }]\n\nconst init= () =>{\n    // si hay todos traelos\n\n    return JSON.parse(localStorage.getItem('todos')) || []; // retorna todos si hay o sino un arreglo vacio\n\n    // return localStorage.getItem('todos');\n    // return [{\n    //     id: new Date().getTime(),\n    //     desc: 'Aprender React',\n    //     done: false\n    // }]\n}\n\nexport const TodoApp = () => {\n\nconst [ todos , dispatch ] = useReducer(todoReducer, [], init); // el InitialState es el init y [] es lo que va a ser inicialmente\n\n\n\n\n\nuseEffect( () =>{ \n    localStorage.setItem('todos', JSON.stringify( todos )); // solo guarda string el localstorage\n}, [todos] )\n\n\nconst handleDelete = (todoId) =>{\n    console.log(todoId);\n    // crear la action\n\n    // const newTodoDelete = { así funciona\n    //     id: todoId,\n    //     desc: description,\n    //     done: false\n    //    };\n    //    const actionDelete = {\n    //        type: 'delete',\n    //        payload: newTodoDelete\n    //    }\n\n    const action = {\n           type: 'delete',\n            payload: todoId\n    }\n    \n\n    //dispatch\n    dispatch(action);\n//     dispatch(actionDelete);\n }\n\n\n const handleToggle = ( todoId ) =>{\n     dispatch({\n         type: 'toggle',\n         payload: todoId\n     })\n\n }\n\nconst handleAddTodo = ( newTodo ) =>{\n\n    dispatch(    {\n        type: 'add',\n        payload: newTodo\n    });\n}\n\n// console.log(description);\n\n// const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if( description.trim().length <= 1){\n//         return;\n//     }\n//    const newTodo = {\n//     id: new Date().getTime(),\n//     desc: description,\n//     done: false\n//    };\n  \n//    reset();\n\n// }\n\n    return (\n        <div>\n            <h1>TodoApp ( { todos.length } )</h1>\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-7\">\n              \n        {/* TodoList,  necesita los todos argumento enviado mediante prop, handleDelete, handleToggle */}\n                    <TodoList \n                    todos={ todos}\n                    handleDelete={ handleDelete} \n                    handleToggle={ handleToggle}\n                    />\n                        {/* <ul className=\"list-group list-group-flush\">\n                            {\n                                todos.map( (todo, i ) => (\n                                    // TodoListItem, todo, index, handleDelate, handleToggle\n                                <li\n                                    key = { todo.id }\n                                    className=\"list-group-item\"\n                                >\n                                    <p className={ `${ todo.done && 'complete' }`}\n                                    onClick={ () => handleToggle(todo.id)}\n                                    >{ i + 1 }. { todo.desc }</p>\n                                    <button\n                                    className=\"btn btn-danger\"\n                                    onClick={ () => handleDelete(todo.id) }\n                                    >\n                                        Borrar\n                                    </button>\n                                    </li>\n                                ))\n                            }\n                            </ul>  */}\n                </div>\n                <div className=\"col-5\">\n                    <TodoApp \n                        handleAddTodo={ handleAddTodo }\n                    />\n                    {/* <h4>Agregar Todo</h4>\n                    <hr />\n                    <form onSubmit={ handleSubmit }>\n                    <input \n                        type=\"text\"\n                        name=\"description\"\n                        className=\"form-control\"\n                        placeholder=\"Aprender ...\"\n                        autoComplete=\"off\"\n                        value={ description }\n                        onChange={ handleInputChange }\n                    />\n                    \n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-outline-primary mt-1 btn-block\"\n                    >\n                        Agregar\n                    </button>\n                    </form> */}\n                </div>\n            </div>\n     \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}